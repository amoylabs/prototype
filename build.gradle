plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.flywaydb.flyway" version "7.5.2"
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

// Disable bootJar for main project
bootJar {
    enabled = false
}

def junit5Version = '5.3.1'
def mysqlConnectorVersion = '8.0.23'

// To customize a managed version of SLF4J which is controlled by the slf4j.version property
ext['slf4j.version'] = '1.7.20'

apply from: file("${rootDir}/gradle/project.gradle")

// Configure db migration module
configure(subprojects.findAll { it.name.endsWith('-db-migration') }) {
    apply from: file("${rootDir}/gradle/db-migration.gradle")

    dependencies {
        implementation 'org.flywaydb:flyway-core'
        runtimeOnly "mysql:mysql-connector-java:${mysqlConnectorVersion}"
    }

    bootJar {
        enabled = false
    }
}

// Configure unit test lib for projects except db migration
configure(subprojects.findAll { !it.name.endsWith('-migration') }) {
    dependencies {
        testImplementation "org.junit.jupiter:junit-jupiter-api:${junit5Version}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit5Version}"
    }
}

// Configure jar package for sub projects
configure([project(':common'),
           project(':xxx-domain'),
           project(':xxx-persistence'),
           project(':xxx-service')]) {
    bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }
}

project(':xxx-persistence') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        // implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
        // implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        runtimeOnly "mysql:mysql-connector-java:${mysqlConnectorVersion}"
    }
}

project(':xxx-service') {
    dependencies {
        implementation project(':common')
        implementation project(':xxx-persistence')
        implementation 'org.springframework.boot:spring-boot-starter'
    }
}

project(':xxx-web') {
    apply from: file("${rootDir}/gradle/app.gradle")

    dependencies {
        implementation project(':common')
        implementation project(':xxx-service')
        implementation 'org.springframework.boot:spring-boot-starter-web'
        // implementation 'org.springframework.boot:spring-boot-starter-actuator'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }
}